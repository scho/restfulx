<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
  xmlns:s="library://ns.adobe.com/flex/spark" 
  xmlns:mx="library://ns.adobe.com/flex/mx" 
  xmlns:rx="org.restfulx.components.rx.*"  
  width="100%" height="100%"
  paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3" gap="3">
  <fx:Script><![CDATA[
    import org.restfulx.Rx;
    import org.restfulx.utils.RxUtils;
    import <%= base_package %>.models.<%= class_name %>;
<% for model in belongs_tos -%>
    import <%= base_package %>.models.<%= model.camelcase %>;
<% end -%>
<% if attachment_field.size > 0 -%>
    import flash.net.FileReference;
    import org.restfulx.utils.RxFileReference;
<% end -%>

    [Bindable]
    protected var <%= class_name.dcfirst %>:<%= class_name %> = new <%= class_name %>();
<% if attachment_field.size > 0 -%>

    [Bindable]
    protected var fileName:String = "None selected";
    
    protected var file:RxFileReference;
<% end -%>

    protected function new<%= class_name %>():void {
      <%= class_name.dcfirst %> = new <%= class_name %>();
      <%= class_name.dcfirst.pluralize %>List.selectedIndex = -1;
    }

    protected function save<%= class_name %>():void {
      updateModelProperties();
      if (<%= class_name.dcfirst %>.id) {
        <%= class_name.dcfirst %>.update({onSuccess: on<%= class_name %>Update});
      } else {
        <%= class_name.dcfirst %>.create({onSuccess: on<%= class_name %>Create});
      }
    }
  
    protected function updateModelProperties():void {
<% for attribute in attributes -%>
<% if attribute.type == :boolean -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>CheckBox.selected;
<% elsif attribute.type == :string -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextInput.text;
<% elsif attribute.type == :text -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>TextArea.text;
<% elsif attribute.type == :datetime || attribute.type == :time -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateTimeTextInput.date;
<% elsif attribute.type == :date -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_name %>DateField.selectedDate;
<% else -%>
      <%= class_name.dcfirst %>.<%= attribute.flex_name %> = <%= attribute.flex_type %>(<%= attribute.flex_name %>TextInput.text);
<% end -%>
<% end -%>  
<% for model in belongs_tos -%>
      <%= class_name.dcfirst %>.<%= model.camelcase(:lower) %> = <%= model.camelcase %>(<%= model.camelcase(:lower) %>ComboBox.selectedItem);
<% end -%>
<% if attachment_field.size > 0 -%>
      <%= class_name.dcfirst %>.attachment = file;
<% end -%>
    }
   
    protected function destroy<%= class_name %>():void {
      <%= class_name.dcfirst %>.destroy({onSuccess: on<%= class_name %>Destroy});
    }
    
    protected function on<%= class_name %>Select():void {
      <%= class_name.dcfirst %> = RxUtils.clone(<%= class_name.dcfirst.pluralize %>List.selectedItem) as <%= class_name %>;
    }
    
    protected function on<%= class_name %>Create(result:<%= class_name %>):void {
      <%= class_name.dcfirst %> = new <%= class_name %>;
    }
    
    protected function on<%= class_name %>Update(result:<%= class_name %>):void {
      <%= class_name.dcfirst.pluralize %>List.selectedItem = result;
      on<%= class_name %>Select();
    }
    
    protected function on<%= class_name %>Destroy(result:<%= class_name %>):void {
      on<%= class_name %>Create(result);
    }    
<% if attachment_field.size > 0 -%>

    protected function chooseFile():void {
      file = new RxFileReference("<%= attachment_field[0].camelcase(:lower) %>");
      file.reference.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler, false, 0, true);
      file.reference.addEventListener(Event.SELECT, selectFile, false, 0, true);
      file.reference.addEventListener(Event.CANCEL, cancelBrowse, false, 0, true);
      file.reference.browse();
    }
    
    protected function selectFile(event:Event):void { 
      fileSelected(event)
    }
    
    protected function cancelBrowse(event:Event):void {
      file = null;
    }
    
    protected function fileSelected(event:Event):void {
      fileName = FileReference(event.target).name;
    }
    
    protected function ioErrorHandler(event:Event):void {
      fileChooser.errorString = "Failed to selected a file. Please try again.";
    }
<% end -%>
  ]]></fx:Script>
  <s:Panel id="<%= class_name.dcfirst.pluralize %>Panel"
    title="<%= class_name.pluralize %>" cornerRadius="0" dropShadowVisible="false"  borderVisible="true"
    backgroundColor="#EEEEEE" width="25%" height="100%">
    <s:layout>
      <s:VerticalLayout/>
    </s:layout>
    <mx:List id="<%= class_name.dcfirst.pluralize %>List"
      width="100%" height="100%"
      dataProvider="{Rx.models.index(<%= class_name %>)}"
      change="on<%= class_name %>Select()"
	  borderVisible="false"/>
	<s:Line  width="100%">
		<s:stroke>
			<s:SolidColorStroke weight="1" color="black" caps="square" alpha="0.4" />
		</s:stroke>
	</s:Line>	
    <mx:ControlBar width="100%" height="40" paddingTop="5" paddingBottom="5" paddingRight="5" paddingLeft="5" verticalGap="5">
      <mx:Button label="New <%= class_name %>" width="100%" height="30"
        click="new<%= class_name %>()"/>
    </mx:ControlBar>
  </s:Panel>
  <s:Panel title="Edit <%= class_name %>" cornerRadius="0" dropShadowVisible="false" borderVisible="true"
   backgroundColor="#EEEEEE" width="75%" height="100%">
   <s:layout>
     <s:VerticalLayout/>
   </s:layout>
    <mx:Form width="100%" height="100%">
<% for attribute in attributes -%>
      <mx:FormItem label="<%= attribute.flex_name.ucfirst %>" width="100%" height="{<%= class_name.dcfirst.pluralize %>Panel.height-74}">
<% if attribute.type == :boolean -%>
        <mx:CheckBox id="<%= attribute.flex_name %>CheckBox" selected="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :string -%>
        <mx:TextInput id="<%= attribute.flex_name %>TextInput" width="100%" text="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :text -%>
        <mx:TextArea id="<%= attribute.flex_name %>TextArea" width="100%" height="60" text="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :datetime || attribute.type == :time -%>
        <rx:DateTimeTextInput id="<%= attribute.flex_name %>DateTimeTextInput" width="200" date="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% elsif attribute.type == :date -%>
        <mx:DateField id="<%= attribute.flex_name %>DateField" selectedDate="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% else -%>
        <mx:TextInput id="<%= attribute.flex_name %>TextInput" width="100%" text="{<%= class_name.dcfirst %>.<%= attribute.flex_name %>}"/>
<% end -%>
      </mx:FormItem>
<% end -%>
<% if attachment_field.size > 0 -%>
      <mx:FormItem label="<%= attachment_field[0].camelcase %>:" width="100%" id="fileChooser">
        <mx:Button label="Browseâ€¦" id="fileBrowseButton" click="chooseFile()"/>
        <mx:Label text="{fileName}" maxWidth="190"/>
        <mx:Image source="{<%= class_name.dcfirst %>.attachmentUrl}"/>
      </mx:FormItem>
<% end -%>
<% for model in belongs_tos -%>
      <mx:FormItem label="<%= model.camelcase %>" width="100%">
        <mx:ComboBox id="<%= model.camelcase(:lower) %>ComboBox" width="200"
          labelField="{<%= model.camelcase %>.LABEL}"
          dataProvider="{Rx.models.index(<%= model.camelcase %>)}" prompt="<%= model.camelcase %> ..."
          selectedItem="{<%= class_name.dcfirst %>.<%= model.camelcase(:lower) %>}"/>
      </mx:FormItem>
<% end -%>
    </mx:Form>
	<s:Line  width="100%">
		<s:stroke>
			<s:SolidColorStroke weight="1" color="black" caps="square" alpha="0.4" />
		</s:stroke>
	</s:Line>	
    <mx:ControlBar width="100%" height="40" paddingTop="5" paddingBottom="5" paddingRight="5" paddingLeft="5" verticalGap="5">
      <mx:Button label="Save <%= class_name %>" width="50%" height="30"
        click="save<%= class_name %>()"/>
      <mx:Button label="Delete <%= class_name %>" width="50%" height="30"
        enabled="{RxUtils.canDeleteModel(<%= class_name.dcfirst %>)}"
        click="destroy<%= class_name %>()"/>
    </mx:ControlBar>
  </s:Panel>
</s:HGroup>